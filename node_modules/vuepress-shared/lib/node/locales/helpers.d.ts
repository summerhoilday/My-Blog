import type { Context } from "vuepress-typings";
import type { HopeLang } from "./types";
import type { ConvertLocaleConfig, LocaleConfig } from "../../shared";
/** Check if the lang is supported */
export declare const checkLang: (lang?: string) => boolean;
export declare const showLangError: (lang: string, plugin?: string) => void;
/** Get language from path */
export declare const path2Lang: (path?: string, debug?: boolean) => HopeLang;
/** Get path from language */
export declare const lang2Path: (lang?: string, debug?: boolean) => string;
/**
 * Get language of root directory
 *
 * @param context VuePress Context
 * @returns root language
 */
export declare const getRootLang: (context: Context) => string;
/**
 * Get the infer language path from root directory language
 *
 * @param context VuePress Context
 * @returns infer language
 */
export declare const getRootLangPath: (context: Context) => string;
export declare const getLocalePaths: (context: Context) => string[];
export interface GetLocalesOptions<T> {
    context: Context;
    default: ConvertLocaleConfig<T>;
    config?: LocaleConfig<T> | undefined;
    name?: string;
}
/**
 * Get final locale config to passed to client
 *
 * @param app  VuePress Node App
 * @param defaultLocalesConfig default locale config
 * @param userLocalesConfig user locale config
 * @returns final locale config
 */
export declare const getLocales: <T>({ context, name, default: defaultLocalesConfig, config: userLocalesConfig, }: GetLocalesOptions<T>) => ConvertLocaleConfig<T>;
