"use strict";
const vuepress_shared_1 = require("@mr-hope/vuepress-shared");
const path_1 = require("path");
const compact_1 = require("./compact");
const locales_1 = require("./locales");
const commentPlugin = (options, context) => {
    const userWalineLocales = options.type === "waline"
        ? (0, vuepress_shared_1.getLocales)(context, locales_1.walineLocales, options.walineLocales)
        : {};
    const userValineLocales = options.type === "valine"
        ? (0, vuepress_shared_1.getLocales)(context, locales_1.valineLocales, options.valineLocales)
        : {};
    // remove locales so that they won't be injected in client twice
    if ("walineLocales" in options)
        delete options.walineLocales;
    if ("valineLocales" in options)
        delete options.valineLocales;
    // FIXME: This is a compact cod
    if (options.type === "waline")
        (0, compact_1.covertWalineOptions)(options);
    const config = {
        name: "@mr-hope/vuepress-plugin-comment",
        define: () => ({
            COMMENT_OPTIONS: options,
            WALINE_LOCALES: userWalineLocales,
            VALINE_LOCALES: userValineLocales,
        }),
        alias: {
            "@CommentProvider": options.type === "valine"
                ? (0, path_1.resolve)(__dirname, "../client/Valine.vue")
                : options.type === "waline"
                    ? (0, path_1.resolve)(__dirname, "../client/Waline.vue")
                    : "@mr-hope/vuepress-shared/lib/esm/noopModule",
        },
        enhanceAppFiles: (0, path_1.resolve)(__dirname, "../client/enhanceAppFile.js"),
    };
    if (options.type === "vssue")
        config.plugins = [["@vssue/vuepress-plugin-vssue", options]];
    return config;
};
module.exports = commentPlugin;
//# sourceMappingURL=index.js.map