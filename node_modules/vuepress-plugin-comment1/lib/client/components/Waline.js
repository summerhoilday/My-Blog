import Vue from "vue";
import "../styles/waline.styl";
let timeout = null;
const options = COMMENT_OPTIONS;
const locales = WALINE_LOCALES;
export default Vue.extend({
    // eslint-disable-next-line vue/multi-word-component-names
    name: "Waline",
    data: () => ({
        waline: null,
    }),
    computed: {
        enable() {
            return Boolean(options.serverURL);
        },
        enableComment() {
            if (!this.enable)
                return false;
            const globalEnable = options.comment !== false;
            const pageEnable = this.$page.frontmatter.comment;
            return (globalEnable && pageEnable !== false) || pageEnable === true;
        },
        /** Whether to display view number */
        enablePageview() {
            if (!this.enable)
                return false;
            const globalEnable = options.pageview !== false;
            const pageEnable = this.$page.frontmatter.pageview;
            return (globalEnable && pageEnable !== false) || pageEnable === true;
        },
    },
    watch: {
        $route(to, from) {
            // Refresh comment when navigating to a new page
            if (to.path !== from.path) {
                Vue.nextTick(() => {
                    if (timeout)
                        clearTimeout(timeout);
                    timeout = setTimeout(() => {
                        var _a;
                        (_a = this.waline) === null || _a === void 0 ? void 0 : _a.update({
                            path: this.$withBase(this.$route.path),
                            pageview: this.enablePageview,
                        });
                    }, options.delay);
                });
            }
        },
    },
    mounted() {
        if (this.enable)
            timeout = setTimeout(() => {
                void import(
                /* webpackChunkName: "waline" */ "@waline/client/dist/waline").then(({ init }) => {
                    this.waline = init({
                        el: "#waline-comment",
                        lang: this.$lang === "zh-CN" ? "zh-CN" : "en-US",
                        locale: {
                            ...locales[this.$localePath],
                            ...(options.locale || {}),
                        },
                        emoji: [
                            "//unpkg.com/@waline/emojis@1.0.1/weibo",
                            "//unpkg.com/@waline/emojis@1.0.1/bilibili",
                        ],
                        dark: "body.theme-dark",
                        ...options,
                        pageview: this.enablePageview,
                        path: this.$withBase(this.$route.path),
                    });
                });
            }, options.delay);
    },
    // eslint-disable-next-line vue/no-deprecated-destroyed-lifecycle
    beforeDestroy() {
        var _a;
        if (timeout)
            clearTimeout(timeout);
        (_a = this.waline) === null || _a === void 0 ? void 0 : _a.destroy();
    },
    render(h) {
        return h("div", {
            class: "waline-wrapper",
            style: { display: this.enableComment ? "block" : "none" },
        }, [h("div", { attrs: { id: "waline-comment" } })]);
    },
});
//# sourceMappingURL=Waline.js.map