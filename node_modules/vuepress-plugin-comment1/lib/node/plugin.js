"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.commentPlugin = void 0;
const vuepress_shared_1 = require("vuepress-shared");
const path_1 = require("path");
const compact_1 = require("./compact");
const locales_1 = require("./locales");
const commentPlugin = (options, context) => {
    (0, compact_1.covertOptions)(options);
    const PLUGIN_NAME = "vuepress-plugin-comment1";
    const userValineLocales = options.provider === "Valine"
        ? (0, vuepress_shared_1.getLocales)({
            context,
            config: options.valineLocales,
            default: locales_1.valineLocales,
            name: PLUGIN_NAME,
        })
        : {};
    const userWalineLocales = options.provider === "Waline"
        ? (0, vuepress_shared_1.getLocales)({
            context,
            config: options.walineLocales,
            default: locales_1.walineLocales,
            name: PLUGIN_NAME,
        })
        : {};
    // remove locales so that they won't be injected in client twice
    if ("valineLocales" in options)
        delete options.valineLocales;
    if ("walineLocales" in options)
        delete options.walineLocales;
    const config = {
        name: PLUGIN_NAME,
        define: () => ({
            COMMENT_OPTIONS: options,
            WALINE_LOCALES: userWalineLocales,
            VALINE_LOCALES: userValineLocales,
        }),
        alias: {
            "@CommentService": options.provider === "Giscus"
                ? (0, path_1.resolve)(__dirname, "../client/components/Giscus.js")
                : options.provider === "Waline"
                    ? (0, path_1.resolve)(__dirname, "../client/components/Waline.js")
                    : options.provider === "Valine"
                        ? (0, path_1.resolve)(__dirname, "../client/components/Valine.vue")
                        : options.provider === "Twikoo"
                            ? (0, path_1.resolve)(__dirname, "../client/components/Twikoo.js")
                            : options.provider === "Vssue"
                                ? (0, path_1.resolve)(__dirname, "../client/components/Vssue.js")
                                : vuepress_shared_1.noopModule,
        },
        enhanceAppFiles: (0, path_1.resolve)(__dirname, "../client/enhanceAppFile.js"),
    };
    if (options.provider === "Vssue")
        config.plugins = [["@vssue/vuepress-plugin-vssue", options]];
    return config;
};
exports.commentPlugin = commentPlugin;
//# sourceMappingURL=plugin.js.map